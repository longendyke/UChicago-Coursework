#include "gtest/gtest.h"
#include "person.h"

// this class is used for testing public methods in class Person
class test_person: public ::testing::Test {
protected:
	Person person;
	Person recipient;
};

// test get_username and set_username
TEST_F(test_person, test_username) {
  EXPECT_FALSE(person.set_username("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm"));
  EXPECT_TRUE(person.set_username("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl"));
  EXPECT_STREQ(person.get_username().c_str(), "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl");
	EXPECT_FALSE(person.set_username("abcdefg0"));
	EXPECT_FALSE(person.set_username("abcdefg;"));
	EXPECT_FALSE(person.set_username("3abcdefg;"));
	EXPECT_FALSE(person.set_username(""));


}

// test get_firstname and set_firstname
TEST_F(test_person, test_firstname) {
  EXPECT_FALSE(person.set_firstname("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm"));
  EXPECT_TRUE(person.set_firstname("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl"));
  EXPECT_STREQ(person.get_firstname().c_str(), "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl");
	EXPECT_FALSE(person.set_firstname("abcdefg0"));
	EXPECT_FALSE(person.set_firstname("abcdefg;"));
	EXPECT_TRUE(person.set_firstname(""));

}

// test get_lastname and set_lastname
TEST_F(test_person, test_lastname) {
  EXPECT_FALSE(person.set_lastname("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm"));
  EXPECT_TRUE(person.set_lastname("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl"));
  EXPECT_STREQ(person.get_lastname().c_str(), "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl");
	EXPECT_FALSE(person.set_lastname("abcdefg0"));
	EXPECT_FALSE(person.set_lastname("abcdefg;"));
	EXPECT_TRUE(person.set_lastname(""));
}

/**you may need to write more test functions.
 *  What we provide here is just for your reference
 */

// test get_age and set_age
//   test_person is the name of class your inherit from the base Test class
//   test_age is the name of this test case, which will show up in the test
//     results
//   make sure you cover every subroutine and branches
//   here we test edge cases of invalid ages
//   also, we test the get_age() method
//   avoid using ASSERT_FALSE here; if there is something wrong in ASSERT,
//   it will abort the whole testing which will hinder the grading process
TEST_F(test_person, test_age) {
	EXPECT_FALSE(person.set_age(-1));
	EXPECT_TRUE(person.set_age(0));
	EXPECT_EQ(person.get_age(), 0);
	EXPECT_TRUE(person.set_age(127));
	EXPECT_EQ(person.get_age(), 127);
	EXPECT_FALSE(person.set_age(128));
}

// test get_tagline and set_tagline
TEST_F(test_person, test_tagline) {
	EXPECT_FALSE(person.set_tagline("abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdbcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdbcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdggg"));
	EXPECT_TRUE(person.set_lastname("abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl"));
  EXPECT_STREQ(person.get_lastname().c_str(), "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl");
}

// test get_info and set_info
TEST_F(test_person, test_info) {
	EXPECT_TRUE(person.set_info("jgnewman", "judah", "Newman", 20 , "this is a test")); 
	EXPECT_STREQ(person.get_username().c_str(), "jgnewman");
	EXPECT_STREQ(person.get_firstname().c_str(), "judah");
	EXPECT_STREQ(person.get_lastname().c_str(), "Newman");
	EXPECT_EQ(person.get_age(), 20);
	EXPECT_STREQ(person.get_tagline().c_str(), "this is a test");
	EXPECT_FALSE(person.set_info("john" , "bon" , "fon" , 140 , "hopefully this doesnt work")); 
	EXPECT_STREQ(person.get_username().c_str(), "jgnewman");
	EXPECT_STREQ(person.get_firstname().c_str(), "judah");
	EXPECT_STREQ(person.get_lastname().c_str(), "Newman");
	EXPECT_EQ(person.get_age(), 20);
	EXPECT_STREQ(person.get_tagline().c_str(), "this is a test");


}

// test send_msg and read_msg
//   to make your code shorter, we suggest combining these tests together; you
//   can also separate them into several test cases
TEST_F(test_person, test_msg) {
	EXPECT_FALSE(person.read_msg());
	person.send_msg(recipient, "Hello recipient"); 
	EXPECT_TRUE(recipient.read_msg());
	EXPECT_FALSE(recipient.read_msg());
	recipient.send_msg(person, "Hello Person. How are you?");
	recipient.send_msg(person, "I hope you are doing well");
	EXPECT_TRUE(person.read_msg());
	EXPECT_TRUE(person.read_msg());
	EXPECT_FALSE(person.read_msg());
}

